version: '3.3'

networks:
  ensimagcafet-network:
    name: EnsimagCafet-Network
    driver: bridge

volumes:
  postgres-data:
    name: EnsimagCafet-PostgresData-Volume
    driver: local
  antiforgery-keys-data:
    name: EnsimagCafet-AntiforgeryKeysData-Volume
    driver: local

services:
  ensimagcafet.web:
    container_name: EnsimagCafet.Web
    image: ${DOCKER_REGISTRY-}ensimagcafetweb
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: EnsimagCafet.Web/Dockerfile
    restart: always
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:80
      DB_CONNECTION_STRING: 
      SMTP_SENDER_EMAIL: 
      SMTP_SENDER_NAME: 
      SMTP_SENDER_PASSWORD: 
      SMTP_HOST: 
      SMTP_PORT: 
      SMTP_USE_SSL: 
      SMTP_CHECK_CERTIFICATE_REVOCATION: 
      SMTP_CONTENT_TYPE: 
    networks:
      - ensimagcafet-network
    volumes:
      - antiforgery-keys-data:/var/af-keys
    labels:
      - traefik.enable=true
      - traefik.http.routers.ensimagcafet-router-http.rule=Host(`cafet-ensimag.fr`)
      - traefik.http.routers.ensimagcafet-router-http.entrypoints=http
      - traefik.http.routers.ensimagcafet-router-http.service=ensimagcafet-service
      - traefik.http.routers.ensimagcafet-router-http.middlewares=redirect-https
      - traefik.http.routers.ensimagcafet-router-https.rule=Host(`cafet-ensimag.fr`)
      - traefik.http.routers.ensimagcafet-router-https.entrypoints=https
      - traefik.http.routers.ensimagcafet-router-https.service=ensimagcafet-service
      - traefik.http.routers.ensimagcafet-router-https.tls=true
      - traefik.http.routers.ensimagcafet-router-https.tls.certresolver=dns-letsencrypt-resolver
      - traefik.http.services.ensimagcafet-service.loadbalancer.server.port=80
      - traefik.http.middlewares.redirect-https.redirectscheme.scheme=https
      - traefik.http.middlewares.redirect-https.redirectscheme.permanent=true
  ensimagcafet.entityframeworkcore.dbmigrator:
    container_name: EnsimagCafet.EntityFrameworkCore.DbMigrator
    image: ${DOCKER_REGISTRY-}ensimagcafetentityframeworkcoredbmigrator
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: EnsimagCafet.EntityFrameworkCore.DbMigrator/Dockerfile
    environment:
      DB_CONNECTION_STRING: 
      SU_DEFAULT_PASSWORD: 
    networks:
      - ensimagcafet-network
  postgres:
    container_name: Postgres
    image: postgres
    expose:
      - 5432
    restart: always
    environment:
      POSTGRES_USER: ensimagcafetdev
      POSTGRES_PASSWORD: EnsimagCafetDev
      POSTGRES_DB: ensimagcafetdev
    networks:
      - ensimagcafet-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
